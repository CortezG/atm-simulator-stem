#include <stdio.h>

double first_order_differential_equation(double x, double y) {
    return x - y;
}

void runge_kutta_4th_order_first_order(double (*f)(double, double), double x0, double y0, double h, int num_steps) {
    double x = x0;
    double y = y0;
    
    printf("Solução da EDO de primeira ordem:\n");
    for (int i = 0; i <= num_steps; i++) {
        printf("Passo %d: x = %.2f, y = %.6f\n", i, x, y);
        
        double k1 = h * f(x, y);
        double k2 = h * f(x + h/2, y + k1/2);
        double k3 = h * f(x + h/2, y + k2/2);
        double k4 = h * f(x + h, y + k3);
        
        y = y + (k1 + 2*k2 + 2*k3 + k4) / 6;
        x = x + h;
    }
}

int main() {
    double x0 = 0.0;   // Valor inicial de x
    double y0 = 1.0;   // Valor inicial de y
    double h = 0.1;    // Tamanho do passo
    int num_steps = 10;// Número de passos
    
    runge_kutta_4th_order_first_order(first_order_differential_equation, x0, y0, h, num_steps);
    
    return 0;
}
